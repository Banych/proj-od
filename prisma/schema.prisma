generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma-client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  surname   String?
  username  String    @unique
  email     String?   @unique
  password  String
  rfRu      String?   @db.VarChar(24)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role
  Message   Message[]
  Request   Request[]
}

model Request {
  id                String                @id @default(cuid())
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  type              RequestType
  salesOrganization SalesOrganizationType
  status            RequestStatus         @default(CREATED)
  warehouse         String
  date              DateTime
  odNumber          String                @default("")
  comment           String
  resource          String
  userId            String
  orderNumber       Int                   @unique @default(autoincrement())
  Message           Message[]             @relation("RequestMessages")
  user              User                  @relation(fields: [userId], references: [id], onDelete: Restrict)
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  message   String
  requestId String
  userId    String
  request   Request  @relation("RequestMessages", fields: [requestId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Restrict)
}

enum RequestType {
  ONE_DAY_DELIVERY
  CORRECTION_SALE
  CORRECTION_RETURN
  SAMPLING
}

enum SalesOrganizationType {
  SALES_3801
  SALES_3802
  SALES_3803
  SALES_3804
  SALES_3805
  SALES_3806
}

enum RequestStatus {
  CREATED
  COMPLETED
  INCORRECT
}

enum Role {
  ADMIN
  MANAGER
  DISPATCHER
}
